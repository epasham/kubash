matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
      services:
      - docker
      cache:
        directories:
        - $HOME/.minikube
        - $HOME/.kube
        - $HOME/.local/bin
        - .git
        - /usr/local
      env:
        - MINIKUBE_MEMORY=7777
        - MINIKUBE_CPU=4
        - MINIKUBE_DRIVER=none
        - HELM_INSTALL_DIR=$HOME/.local/bin
        - NVM_DIR="$HOME/.nvm"
        - CHANGE_MINIKUBE_NONE_USER=true
        - MINIKUBE_VERSION=v0.25.2
        - KUBE_VERSION=v1.9.4

language: node_js
node_js:
  - "8"

addons:
  apt:
    packages:
      - curl
      - rsync
      - socat
      - time
      - devscripts
      - ansible
      - parallel
      - golang
      - nmap
      - python-pip
      - rlwrap

before_install:
# install nsenter which is required for port forwarding

before_script:
# Download kubectl, which is a requirement for using minikube.
# Download minikube.
- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/$KUBE_VERSION/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
- curl -Lo minikube https://storage.googleapis.com/minikube/releases/$MINIKUBE_VERSION/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
- sudo minikube start --vm-driver=none --kubernetes-version=$KUBE_VERSION
# Fix the kubectl context, as it's often stale.
- minikube update-context
# Wait for Kubernetes to be up and ready.
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done

script:
  - npm i -g yaml2json
  - ln -s $(pwd) /home/travis/.kubash
  - make bats
  - make ct
  - ls -alh /home/travis
  - ls -alh /home/travis/.kubash
  - ls -alh /home/travis/.kubash/bin
  - if [[ ! -e "$HOME/.local/bin/nsenter" ]]; then .ci/ubuntu-compile-nsenter.sh && sudo cp .tmp/util-linux-2.30.2/nsenter $HOME/.local/bin; fi
  - curl -sL --silent https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get|bash
  - bash scripts/dotfiles
  - bash scripts/chkdirs
  - sudo chown $USER /var/lib
  - /bin/bash -l -c "/usr/bin/time -v make -e ci"
  - env
  - pwd
  - mkdir -p clusters/default
  - cp $HOME/.kube/config clusters/default/
  - /bin/bash -l -c "kubash tiller"
  - /bin/bash -l -c "kubash openebs"
  - /bin/bash -l -c "w8s/generic.w8 openebs-provisioner default"
  - sleep 5
  - bats .ci/.tests.bats
    #- /bin/bash -l -c "kubash demo"
  # too much memory usage so we will end it there and destroy the VM
  # as the next though successful take too long
    #- /bin/bash -l -c "kubash demo"
    #- /bin/bash -l -c "w8s/generic.w8 percona default"
    #- /bin/bash -l -c "w8s/generic.w8 pgset-0 default"
    #- /bin/bash -l -c "w8s/generic.w8 rabbitmq-0 default"
    #- sudo chown -R $USER /usr/local
    #- sudo ls -lh /usr/bin
    #- sudo chown -R $USER /lib/systemd/system
    #- sudo chown $USER /usr/bin
    #- sudo mkdir -p /etc/kubernetes
    #- sudo chown $USER /etc
    #- sudo chown -R $USER /etc/kubernetes
    #- sudo mkdir /etc/system.d
    #- sudo chown -R $USER /etc/system.d
    #- /bin/bash -l -c "w8s/generic.w8 mongo-0 default"
